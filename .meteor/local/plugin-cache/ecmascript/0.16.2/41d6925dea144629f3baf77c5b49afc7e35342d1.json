{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking\\packages\\mongo\\oplog_v2_converter.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.windows.x86_64"},"sourceFileName":"packages/mongo/oplog_v2_converter.js","filename":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking\\packages\\mongo\\oplog_v2_converter.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking","root":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking\\packages\\mongo\\oplog_v2_converter.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mongo/oplog_v2_converter.js"}},"code":"const _excluded = [\"i\", \"u\", \"d\"],\n      _excluded2 = [\"a\"];\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\nmodule.export({\n  oplogV2V1Converter: () => oplogV2V1Converter\n});\n\n// we are mapping the new oplog format on mongo 5\n// to what we know better, $set and $unset format\n// new oplog format ex:\n// {\n//  '$v': 2,\n//  diff: { u: { key1: 2022-01-06T18:23:16.131Z, key2: [ObjectID] } }\n// }\nfunction logConverterCalls(oplogEntry, prefixKey, key) {\n  if (!process.env.OPLOG_CONVERTER_DEBUG) {\n    return;\n  }\n\n  console.log('Calling nestedOplogEntryParsers with the following values: ');\n  console.log(\"Oplog entry: \".concat(JSON.stringify(oplogEntry), \", prefixKey: \").concat(prefixKey, \", key: \").concat(key));\n}\n/*\nthe structure of an entry is:\n\n\n-> entry: i, u, d + sFields.\n-> sFields: i, u, d + sFields\n-> sFields: arrayOperator -> { a: true, u0: 2 }\n-> i,u,d: { key: value }\n-> value: {key: value}\n\ni and u are both $set\nd is $unset\non mongo 4\n */\n\n\nconst isArrayOperator = possibleArrayOperator => {\n  if (!possibleArrayOperator || !Object.keys(possibleArrayOperator).length) return false;\n\n  if (!possibleArrayOperator.a) {\n    return false;\n  }\n\n  return !Object.keys(possibleArrayOperator).find(key => key !== 'a' && !key.match(/^u\\d+/));\n};\n\nfunction logOplogEntryError(oplogEntry, prefixKey, key) {\n  console.log('---');\n  console.log('WARNING: Unsupported oplog operation, please fill an issue with this message at github.com/meteor/meteor');\n  console.log(\"Oplog entry: \".concat(JSON.stringify(oplogEntry), \", prefixKey: \").concat(prefixKey, \", key: \").concat(key));\n  console.log('---');\n}\n\nconst nestedOplogEntryParsers = function (oplogEntry) {\n  let prefixKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  const {\n    i = {},\n    u = {},\n    d = {}\n  } = oplogEntry,\n        sFields = _objectWithoutProperties(oplogEntry, _excluded);\n\n  logConverterCalls(oplogEntry, prefixKey, 'ENTRY_POINT');\n  const sFieldsOperators = [];\n  Object.entries(sFields).forEach(_ref => {\n    let [key, value] = _ref;\n    const actualKeyNameWithoutSPrefix = key.substring(1);\n\n    if (isArrayOperator(value || {})) {\n      const {\n        a\n      } = value,\n            uPosition = _objectWithoutProperties(value, _excluded2);\n\n      if (uPosition) {\n        for (const [positionKey, newArrayIndexValue] of Object.entries(uPosition)) {\n          sFieldsOperators.push({\n            [newArrayIndexValue === null ? '$unset' : '$set']: {\n              [\"\".concat(prefixKey).concat(actualKeyNameWithoutSPrefix, \".\").concat(positionKey.substring(1))]: newArrayIndexValue === null ? true : newArrayIndexValue\n            }\n          });\n        }\n      } else {\n        logOplogEntryError(oplogEntry, prefixKey, key);\n        throw new Error(\"Unsupported oplog array entry, please review the input: \".concat(JSON.stringify(value)));\n      }\n    } else {\n      // we are looking at something that we expected to be \"sSomething\" but is null after removing s\n      // this happens on \"a\": true which is a simply ack that comes embeded\n      // we dont need to call recursion on this case, only ignore it\n      if (!actualKeyNameWithoutSPrefix || actualKeyNameWithoutSPrefix === '') {\n        return null;\n      } // we are looking at a \"sSomething\" that is actually a nested object set\n\n\n      logConverterCalls(oplogEntry, prefixKey, key);\n      sFieldsOperators.push(nestedOplogEntryParsers(value, \"\".concat(prefixKey).concat(actualKeyNameWithoutSPrefix, \".\")));\n    }\n  });\n  const $unset = Object.keys(d).reduce((acc, key) => {\n    return _objectSpread(_objectSpread({}, acc), {}, {\n      [\"\".concat(prefixKey).concat(key)]: true\n    });\n  }, {});\n\n  const setObjectSource = _objectSpread(_objectSpread({}, i), u);\n\n  const $set = Object.keys(setObjectSource).reduce((acc, key) => {\n    const prefixedKey = \"\".concat(prefixKey).concat(key);\n    return _objectSpread(_objectSpread({}, acc), !Array.isArray(setObjectSource[key]) && typeof setObjectSource[key] === 'object' ? flattenObject({\n      [prefixedKey]: setObjectSource[key]\n    }) : {\n      [prefixedKey]: setObjectSource[key]\n    });\n  }, {});\n  const c = [...sFieldsOperators, {\n    $unset,\n    $set\n  }];\n  const {\n    $set: s,\n    $unset: un\n  } = c.reduce((acc, _ref2) => {\n    let {\n      $set: set = {},\n      $unset: unset = {}\n    } = _ref2;\n    return {\n      $set: _objectSpread(_objectSpread({}, acc.$set), set),\n      $unset: _objectSpread(_objectSpread({}, acc.$unset), unset)\n    };\n  }, {});\n  return _objectSpread(_objectSpread({}, Object.keys(s).length ? {\n    $set: s\n  } : {}), Object.keys(un).length ? {\n    $unset: un\n  } : {});\n};\n\nconst oplogV2V1Converter = v2OplogEntry => {\n  if (v2OplogEntry.$v !== 2 || !v2OplogEntry.diff) return v2OplogEntry;\n  logConverterCalls(v2OplogEntry, 'INITIAL_CALL', 'INITIAL_CALL');\n  return _objectSpread({\n    $v: 2\n  }, nestedOplogEntryParsers(v2OplogEntry.diff || {}));\n};\n\nfunction flattenObject(ob) {\n  const toReturn = {};\n\n  for (const i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n\n    if (!Array.isArray(ob[i]) && typeof ob[i] == 'object' && ob[i] !== null) {\n      const flatObject = flattenObject(ob[i]);\n      let objectKeys = Object.keys(flatObject);\n\n      if (objectKeys.length === 0) {\n        return ob;\n      }\n\n      for (const x of objectKeys) {\n        toReturn[i + '.' + x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = ob[i];\n    }\n  }\n\n  return toReturn;\n}","map":{"version":3,"sources":["packages/mongo/oplog_v2_converter.js"],"names":["_objectSpread","module","link","default","v","_objectWithoutProperties","export","oplogV2V1Converter","logConverterCalls","oplogEntry","prefixKey","key","process","env","OPLOG_CONVERTER_DEBUG","console","log","JSON","stringify","isArrayOperator","possibleArrayOperator","Object","keys","length","a","find","match","logOplogEntryError","nestedOplogEntryParsers","i","u","d","sFields","sFieldsOperators","entries","forEach","value","actualKeyNameWithoutSPrefix","substring","uPosition","positionKey","newArrayIndexValue","push","Error","$unset","reduce","acc","setObjectSource","$set","prefixedKey","Array","isArray","flattenObject","c","s","un","set","unset","v2OplogEntry","$v","diff","ob","toReturn","hasOwnProperty","flatObject","objectKeys","x"],"mappings":"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","sourcesContent":["// we are mapping the new oplog format on mongo 5\n// to what we know better, $set and $unset format\n// new oplog format ex:\n// {\n//  '$v': 2,\n//  diff: { u: { key1: 2022-01-06T18:23:16.131Z, key2: [ObjectID] } }\n// }\n\nfunction logConverterCalls(oplogEntry, prefixKey, key) {\n  if (!process.env.OPLOG_CONVERTER_DEBUG) {\n    return;\n  }\n  console.log('Calling nestedOplogEntryParsers with the following values: ');\n  console.log(\n    `Oplog entry: ${JSON.stringify(\n      oplogEntry\n    )}, prefixKey: ${prefixKey}, key: ${key}`\n  );\n}\n\n/*\nthe structure of an entry is:\n\n\n-> entry: i, u, d + sFields.\n-> sFields: i, u, d + sFields\n-> sFields: arrayOperator -> { a: true, u0: 2 }\n-> i,u,d: { key: value }\n-> value: {key: value}\n\ni and u are both $set\nd is $unset\non mongo 4\n */\n\nconst isArrayOperator = possibleArrayOperator => {\n  if (!possibleArrayOperator || !Object.keys(possibleArrayOperator).length)\n    return false;\n\n  if (!possibleArrayOperator.a) {\n    return false;\n  }\n  return !Object.keys(possibleArrayOperator).find(\n      key => key !== 'a' && !key.match(/^u\\d+/)\n  );\n};\nfunction logOplogEntryError(oplogEntry, prefixKey, key) {\n  console.log('---');\n  console.log(\n    'WARNING: Unsupported oplog operation, please fill an issue with this message at github.com/meteor/meteor'\n  );\n  console.log(\n    `Oplog entry: ${JSON.stringify(\n      oplogEntry\n    )}, prefixKey: ${prefixKey}, key: ${key}`\n  );\n  console.log('---');\n}\n\nconst nestedOplogEntryParsers = (oplogEntry, prefixKey = '') => {\n  const { i = {}, u = {}, d = {}, ...sFields } = oplogEntry;\n  logConverterCalls(oplogEntry, prefixKey, 'ENTRY_POINT');\n  const sFieldsOperators = [];\n  Object.entries(sFields).forEach(([key, value]) => {\n    const actualKeyNameWithoutSPrefix = key.substring(1);\n    if (isArrayOperator(value || {})) {\n      const { a, ...uPosition } = value;\n      if (uPosition) {\n        for (const [positionKey, newArrayIndexValue] of Object.entries(\n          uPosition\n        )) {\n          sFieldsOperators.push({\n            [newArrayIndexValue === null ? '$unset' : '$set']: {\n              [`${prefixKey}${actualKeyNameWithoutSPrefix}.${positionKey.substring(\n                1\n              )}`]: newArrayIndexValue === null ? true : newArrayIndexValue,\n            },\n          });\n        }\n      } else {\n        logOplogEntryError(oplogEntry, prefixKey, key);\n        throw new Error(\n          `Unsupported oplog array entry, please review the input: ${JSON.stringify(\n            value\n          )}`\n        );\n      }\n    } else {\n      // we are looking at something that we expected to be \"sSomething\" but is null after removing s\n      // this happens on \"a\": true which is a simply ack that comes embeded\n      // we dont need to call recursion on this case, only ignore it\n      if (!actualKeyNameWithoutSPrefix || actualKeyNameWithoutSPrefix === '') {\n        return null;\n      }\n      // we are looking at a \"sSomething\" that is actually a nested object set\n      logConverterCalls(oplogEntry, prefixKey, key);\n      sFieldsOperators.push(\n        nestedOplogEntryParsers(\n          value,\n          `${prefixKey}${actualKeyNameWithoutSPrefix}.`\n        )\n      );\n    }\n  });\n  const $unset = Object.keys(d).reduce((acc, key) => {\n    return { ...acc, [`${prefixKey}${key}`]: true };\n  }, {});\n  const setObjectSource = { ...i, ...u };\n  const $set = Object.keys(setObjectSource).reduce((acc, key) => {\n    const prefixedKey = `${prefixKey}${key}`;\n    return {\n      ...acc,\n      ...(!Array.isArray(setObjectSource[key]) &&\n      typeof setObjectSource[key] === 'object'\n        ? flattenObject({ [prefixedKey]: setObjectSource[key] })\n        : {\n            [prefixedKey]: setObjectSource[key],\n          }),\n    };\n  }, {});\n\n  const c = [...sFieldsOperators, { $unset, $set }];\n  const { $set: s, $unset: un } = c.reduce(\n    (acc, { $set: set = {}, $unset: unset = {} }) => {\n      return {\n        $set: { ...acc.$set, ...set },\n        $unset: { ...acc.$unset, ...unset },\n      };\n    },\n    {}\n  );\n  return {\n    ...(Object.keys(s).length ? { $set: s } : {}),\n    ...(Object.keys(un).length ? { $unset: un } : {}),\n  };\n};\n\nexport const oplogV2V1Converter = v2OplogEntry => {\n  if (v2OplogEntry.$v !== 2 || !v2OplogEntry.diff) return v2OplogEntry;\n  logConverterCalls(v2OplogEntry, 'INITIAL_CALL', 'INITIAL_CALL');\n  return { $v: 2, ...nestedOplogEntryParsers(v2OplogEntry.diff || {}) };\n};\n\nfunction flattenObject(ob) {\n  const toReturn = {};\n\n  for (const i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n\n    if (!Array.isArray(ob[i]) && typeof ob[i] == 'object' && ob[i] !== null) {\n      const flatObject = flattenObject(ob[i]);\n      let objectKeys = Object.keys(flatObject);\n      if (objectKeys.length === 0) {\n        return ob;\n      }\n      for (const x of objectKeys) {\n        toReturn[i + '.' + x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = ob[i];\n    }\n  }\n  return toReturn;\n}\n"]},"sourceType":"module","externalDependencies":{},"hash":"41d6925dea144629f3baf77c5b49afc7e35342d1"}
