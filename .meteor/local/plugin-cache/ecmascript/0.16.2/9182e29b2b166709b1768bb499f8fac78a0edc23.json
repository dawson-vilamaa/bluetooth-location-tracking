{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking\\packages\\blaze-hot\\update-templates.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/blaze-hot/update-templates.js","filename":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking\\packages\\blaze-hot\\update-templates.js","inputSourceMap":{"version":3,"sources":["packages/blaze-hot/update-templates.js"],"names":["UpdateAll","Symbol","renderedTemplates","overrideTemplateContentBlock","overrideTemplateElseBlock","oldConstructView","Template","prototype","constructView","view","apply","arguments","templateName","viewName","onViewCreated","push","onViewDestroyed","index","indexOf","splice","templateContentBlock","templateElseBlock","updateRootViews","_applyHmrChanges","timeout","lastUpdateFailed","modifiedTemplates","Set","templateViewPrefix","clearTimeout","add","setTimeout","i","__pendingReplacement","length","forEach","delete","console","error","views","pop","template","parentView","log","isRendered","Package","tracker","Tracker","flush","parent","parentElement","_domrange","next","lastNode","nextSibling","nextComment","document","createComment","insertBefore","detach","destroy","newView","Blaze","render","slice","members","findIndex","member","removeChild"],"mappings":"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","sourcesContent":["export const UpdateAll = Symbol('update all templates')\n\nlet renderedTemplates = {};\nlet overrideTemplateContentBlock = null;\nlet overrideTemplateElseBlock = null;\n\nconst oldConstructView = Template.prototype.constructView;\n\nTemplate.prototype.constructView = function () {\n  let view = oldConstructView.apply(this, arguments);\n  let templateName = this.viewName;\n\n  view.onViewCreated(function () {\n    renderedTemplates[templateName] = renderedTemplates[templateName] || [];\n    renderedTemplates[templateName].push(view);\n  });\n\n  view.onViewDestroyed(function () {\n    const index = renderedTemplates[templateName].indexOf(view);\n    if (index > -1) {\n      renderedTemplates[templateName].splice(index, 1);\n    }\n  });\n\n  if (overrideTemplateContentBlock) {\n    view.templateContentBlock = overrideTemplateContentBlock;\n    overrideTemplateContentBlock = null;\n  }\n\n  if (overrideTemplateElseBlock) {\n    view.templateElseBlock = overrideTemplateElseBlock;\n    overrideTemplateElseBlock = null;\n  }\n\n  return view;\n}\n\nlet updateRootViews = Template._applyHmrChanges;\n\nlet timeout = null;\nlet lastUpdateFailed = false;\nlet modifiedTemplates = new Set();\nlet templateViewPrefix = 'Template.';\n\n// Overrides the default _applyHmrChanges with one that updates the specific\n// views for modified templates instead of updating everything.\nTemplate._applyHmrChanges = function (templateName = UpdateAll) {\n  if (templateName === UpdateAll || lastUpdateFailed) {\n    lastUpdateFailed = false;\n    clearTimeout(timeout);\n    updateRootViews();\n    return;\n  } else {\n    modifiedTemplates.add(templateName);\n  }\n\n  if (timeout) {\n    return;\n  }\n\n  timeout = setTimeout(() => {\n    for (var i = 0; i < Template.__pendingReplacement.length; i++) {\n      delete Template[Template.__pendingReplacement[i]]\n    }\n\n    Template.__pendingReplacement = [];\n\n    timeout = null;\n    modifiedTemplates.forEach(templateName => {\n      modifiedTemplates.delete(templateName);\n      let viewName = templateName;\n\n      if (!(viewName in renderedTemplates)) {\n        viewName = templateViewPrefix + viewName;\n      } else {\n        console.error('[Blaze HMR] Error: view name does not start with Template');\n        return;\n      }\n\n      if (!(viewName in renderedTemplates)) {\n        return;\n      }\n\n      let views = renderedTemplates[viewName];\n      renderedTemplates[viewName] = [];\n      while (views.length > 0) {\n        let view = views.pop();\n\n        // find first parent template that isn't a content block\n        while (!view.template || view.templateContentBlock || view.templateElseBlock) {\n          if (!view.parentView) {\n            console.log('[Blaze HMR] Unable to update template', viewName);\n            return;\n          }\n\n          view = view.parentView;\n        }\n\n        if (!view.isRendered) {\n          continue;\n        }\n\n        // TODO: this can be removed if we don't update a view, and then update\n        // one of its children (we only need to update the parent).\n        Package.tracker.Tracker.flush();\n\n        let parent = view.parentView;\n        let parentElement = view._domrange.parentElement;\n        let next = view._domrange.lastNode().nextSibling;\n        let nextComment = null;\n\n        if (!next) {\n          // percolate:momentum requires a next node to show the new nodes\n          next = nextComment = document.createComment('Blaze HMR Placeholder');\n          parentElement.insertBefore(nextComment, null);\n        }\n\n        if (!parent) {\n          // TODO: we only need to update a single root view\n          return updateRootViews();\n        }\n\n        if (view.templateContentBlock) {\n          overrideTemplateContentBlock = view.templateContentBlock;\n        }\n        if (view.templateElseBlock) {\n          overrideTemplateElseBlock = view.templateElseBlock;\n        }\n\n        // Since there is a parent range, Blaze will not automatically\n        // detach the dom range.\n        view._domrange.detach();\n        view._domrange.destroy();\n        let newView;\n\n        try {\n          newView = Blaze.render(\n            Template[view.template.viewName.slice('Template.'.length)],\n            parentElement,\n            next,\n            parent\n          );\n        } catch (error) {\n          console.log('[Blaze HMR] Error re-rending template:');\n          console.error(error);\n          lastUpdateFailed = true;\n        }\n\n        let index = parent._domrange.members.findIndex(member => {\n          return member && member.view === view;\n        });\n        if (newView) {\n          parent._domrange.members.splice(index, 1, newView._domrange);\n        } else {\n          parent._domrange.members.splice(index, 1);\n        }\n\n        if (nextComment) {\n          parentElement.removeChild(nextComment);\n        }\n      }\n    });\n  });\n}\n"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking","root":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"C:\\Users\\trevo\\Documents\\Capstone Project\\Project Folder\\bluetooth-location-tracking\\packages\\blaze-hot\\update-templates.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/blaze-hot/update-templates.js"}},"code":"!function (module1) {\n  module1.export({\n    UpdateAll: () => UpdateAll\n  });\n\n  ___INIT_METEOR_FAST_REFRESH(module);\n\n  const UpdateAll = Symbol('update all templates');\n  let renderedTemplates = {};\n  let overrideTemplateContentBlock = null;\n  let overrideTemplateElseBlock = null;\n  const oldConstructView = Template.prototype.constructView;\n\n  Template.prototype.constructView = function () {\n    let view = oldConstructView.apply(this, arguments);\n    let templateName = this.viewName;\n    view.onViewCreated(function () {\n      renderedTemplates[templateName] = renderedTemplates[templateName] || [];\n      renderedTemplates[templateName].push(view);\n    });\n    view.onViewDestroyed(function () {\n      const index = renderedTemplates[templateName].indexOf(view);\n\n      if (index > -1) {\n        renderedTemplates[templateName].splice(index, 1);\n      }\n    });\n\n    if (overrideTemplateContentBlock) {\n      view.templateContentBlock = overrideTemplateContentBlock;\n      overrideTemplateContentBlock = null;\n    }\n\n    if (overrideTemplateElseBlock) {\n      view.templateElseBlock = overrideTemplateElseBlock;\n      overrideTemplateElseBlock = null;\n    }\n\n    return view;\n  };\n\n  let updateRootViews = Template._applyHmrChanges;\n  let timeout = null;\n  let lastUpdateFailed = false;\n  let modifiedTemplates = new Set();\n  let templateViewPrefix = 'Template.'; // Overrides the default _applyHmrChanges with one that updates the specific\n  // views for modified templates instead of updating everything.\n\n  Template._applyHmrChanges = function () {\n    let templateName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : UpdateAll;\n\n    if (templateName === UpdateAll || lastUpdateFailed) {\n      lastUpdateFailed = false;\n      clearTimeout(timeout);\n      updateRootViews();\n      return;\n    } else {\n      modifiedTemplates.add(templateName);\n    }\n\n    if (timeout) {\n      return;\n    }\n\n    timeout = setTimeout(() => {\n      for (var i = 0; i < Template.__pendingReplacement.length; i++) {\n        delete Template[Template.__pendingReplacement[i]];\n      }\n\n      Template.__pendingReplacement = [];\n      timeout = null;\n      modifiedTemplates.forEach(templateName => {\n        modifiedTemplates.delete(templateName);\n        let viewName = templateName;\n\n        if (!(viewName in renderedTemplates)) {\n          viewName = templateViewPrefix + viewName;\n        } else {\n          console.error('[Blaze HMR] Error: view name does not start with Template');\n          return;\n        }\n\n        if (!(viewName in renderedTemplates)) {\n          return;\n        }\n\n        let views = renderedTemplates[viewName];\n        renderedTemplates[viewName] = [];\n\n        while (views.length > 0) {\n          let view = views.pop(); // find first parent template that isn't a content block\n\n          while (!view.template || view.templateContentBlock || view.templateElseBlock) {\n            if (!view.parentView) {\n              console.log('[Blaze HMR] Unable to update template', viewName);\n              return;\n            }\n\n            view = view.parentView;\n          }\n\n          if (!view.isRendered) {\n            continue;\n          } // TODO: this can be removed if we don't update a view, and then update\n          // one of its children (we only need to update the parent).\n\n\n          Package.tracker.Tracker.flush();\n          let parent = view.parentView;\n          let parentElement = view._domrange.parentElement;\n\n          let next = view._domrange.lastNode().nextSibling;\n\n          let nextComment = null;\n\n          if (!next) {\n            // percolate:momentum requires a next node to show the new nodes\n            next = nextComment = document.createComment('Blaze HMR Placeholder');\n            parentElement.insertBefore(nextComment, null);\n          }\n\n          if (!parent) {\n            // TODO: we only need to update a single root view\n            return updateRootViews();\n          }\n\n          if (view.templateContentBlock) {\n            overrideTemplateContentBlock = view.templateContentBlock;\n          }\n\n          if (view.templateElseBlock) {\n            overrideTemplateElseBlock = view.templateElseBlock;\n          } // Since there is a parent range, Blaze will not automatically\n          // detach the dom range.\n\n\n          view._domrange.detach();\n\n          view._domrange.destroy();\n\n          let newView;\n\n          try {\n            newView = Blaze.render(Template[view.template.viewName.slice('Template.'.length)], parentElement, next, parent);\n          } catch (error) {\n            console.log('[Blaze HMR] Error re-rending template:');\n            console.error(error);\n            lastUpdateFailed = true;\n          }\n\n          let index = parent._domrange.members.findIndex(member => {\n            return member && member.view === view;\n          });\n\n          if (newView) {\n            parent._domrange.members.splice(index, 1, newView._domrange);\n          } else {\n            parent._domrange.members.splice(index, 1);\n          }\n\n          if (nextComment) {\n            parentElement.removeChild(nextComment);\n          }\n        }\n      });\n    });\n  };\n}.call(this, module);","map":{"version":3,"mappings":"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","names":["UpdateAll","Symbol","renderedTemplates","overrideTemplateContentBlock","overrideTemplateElseBlock","oldConstructView","Template","prototype","constructView","view","apply","arguments","templateName","viewName","onViewCreated","push","onViewDestroyed","index","indexOf","splice","templateContentBlock","templateElseBlock","updateRootViews","_applyHmrChanges","timeout","lastUpdateFailed","modifiedTemplates","Set","templateViewPrefix","clearTimeout","add","setTimeout","i","__pendingReplacement","length","forEach","delete","console","error","views","pop","template","parentView","log","isRendered","Package","tracker","Tracker","flush","parent","parentElement","_domrange","next","lastNode","nextSibling","nextComment","document","createComment","insertBefore","detach","destroy","newView","Blaze","render","slice","members","findIndex","member","removeChild"],"sources":["packages/blaze-hot/update-templates.js"],"sourcesContent":["export const UpdateAll = Symbol('update all templates')\n\nlet renderedTemplates = {};\nlet overrideTemplateContentBlock = null;\nlet overrideTemplateElseBlock = null;\n\nconst oldConstructView = Template.prototype.constructView;\n\nTemplate.prototype.constructView = function () {\n  let view = oldConstructView.apply(this, arguments);\n  let templateName = this.viewName;\n\n  view.onViewCreated(function () {\n    renderedTemplates[templateName] = renderedTemplates[templateName] || [];\n    renderedTemplates[templateName].push(view);\n  });\n\n  view.onViewDestroyed(function () {\n    const index = renderedTemplates[templateName].indexOf(view);\n    if (index > -1) {\n      renderedTemplates[templateName].splice(index, 1);\n    }\n  });\n\n  if (overrideTemplateContentBlock) {\n    view.templateContentBlock = overrideTemplateContentBlock;\n    overrideTemplateContentBlock = null;\n  }\n\n  if (overrideTemplateElseBlock) {\n    view.templateElseBlock = overrideTemplateElseBlock;\n    overrideTemplateElseBlock = null;\n  }\n\n  return view;\n}\n\nlet updateRootViews = Template._applyHmrChanges;\n\nlet timeout = null;\nlet lastUpdateFailed = false;\nlet modifiedTemplates = new Set();\nlet templateViewPrefix = 'Template.';\n\n// Overrides the default _applyHmrChanges with one that updates the specific\n// views for modified templates instead of updating everything.\nTemplate._applyHmrChanges = function (templateName = UpdateAll) {\n  if (templateName === UpdateAll || lastUpdateFailed) {\n    lastUpdateFailed = false;\n    clearTimeout(timeout);\n    updateRootViews();\n    return;\n  } else {\n    modifiedTemplates.add(templateName);\n  }\n\n  if (timeout) {\n    return;\n  }\n\n  timeout = setTimeout(() => {\n    for (var i = 0; i < Template.__pendingReplacement.length; i++) {\n      delete Template[Template.__pendingReplacement[i]]\n    }\n\n    Template.__pendingReplacement = [];\n\n    timeout = null;\n    modifiedTemplates.forEach(templateName => {\n      modifiedTemplates.delete(templateName);\n      let viewName = templateName;\n\n      if (!(viewName in renderedTemplates)) {\n        viewName = templateViewPrefix + viewName;\n      } else {\n        console.error('[Blaze HMR] Error: view name does not start with Template');\n        return;\n      }\n\n      if (!(viewName in renderedTemplates)) {\n        return;\n      }\n\n      let views = renderedTemplates[viewName];\n      renderedTemplates[viewName] = [];\n      while (views.length > 0) {\n        let view = views.pop();\n\n        // find first parent template that isn't a content block\n        while (!view.template || view.templateContentBlock || view.templateElseBlock) {\n          if (!view.parentView) {\n            console.log('[Blaze HMR] Unable to update template', viewName);\n            return;\n          }\n\n          view = view.parentView;\n        }\n\n        if (!view.isRendered) {\n          continue;\n        }\n\n        // TODO: this can be removed if we don't update a view, and then update\n        // one of its children (we only need to update the parent).\n        Package.tracker.Tracker.flush();\n\n        let parent = view.parentView;\n        let parentElement = view._domrange.parentElement;\n        let next = view._domrange.lastNode().nextSibling;\n        let nextComment = null;\n\n        if (!next) {\n          // percolate:momentum requires a next node to show the new nodes\n          next = nextComment = document.createComment('Blaze HMR Placeholder');\n          parentElement.insertBefore(nextComment, null);\n        }\n\n        if (!parent) {\n          // TODO: we only need to update a single root view\n          return updateRootViews();\n        }\n\n        if (view.templateContentBlock) {\n          overrideTemplateContentBlock = view.templateContentBlock;\n        }\n        if (view.templateElseBlock) {\n          overrideTemplateElseBlock = view.templateElseBlock;\n        }\n\n        // Since there is a parent range, Blaze will not automatically\n        // detach the dom range.\n        view._domrange.detach();\n        view._domrange.destroy();\n        let newView;\n\n        try {\n          newView = Blaze.render(\n            Template[view.template.viewName.slice('Template.'.length)],\n            parentElement,\n            next,\n            parent\n          );\n        } catch (error) {\n          console.log('[Blaze HMR] Error re-rending template:');\n          console.error(error);\n          lastUpdateFailed = true;\n        }\n\n        let index = parent._domrange.members.findIndex(member => {\n          return member && member.view === view;\n        });\n        if (newView) {\n          parent._domrange.members.splice(index, 1, newView._domrange);\n        } else {\n          parent._domrange.members.splice(index, 1);\n        }\n\n        if (nextComment) {\n          parentElement.removeChild(nextComment);\n        }\n      }\n    });\n  });\n}\n"]},"sourceType":"module","externalDependencies":{},"hash":"9182e29b2b166709b1768bb499f8fac78a0edc23"}
