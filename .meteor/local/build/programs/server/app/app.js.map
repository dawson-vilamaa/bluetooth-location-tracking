{"version":3,"sources":["meteor://ðŸ’»app/lib/database.js","meteor://ðŸ’»app/server/main.js"],"names":["module","export","patientInformationdb","Mongo","Collection","Meteor","link","v","get","startup","remove","i","patientID","replace","charAt","Math","random","DOB","randomDate","Date","age","ageCalculator","weight","height","bloodPressure","heartRate","RBC","bloodGlucose","hemoglobin","hematocrit","MCV","plateletCount","WBC","sodium","potassium","macAddress","floor","patientName","getRandomName","firstNames","lastNames","address","generateStreetAddress","physicianName","prescriptions","getPrescriptions","insert","getBoolean","methods","clearRecords","getRandomNumber","max","arr1","arr2","firstName","length","lastName","name","start","end","getTime","toDateString","dob","month_diff","now","age_dt","year","getUTCFullYear","abs","num","streetNames","zipCodes","streetName","zip","numOfPrepscriptions","actualPrescriptions","drug","includes","push","random_boolean_value"],"mappings":"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","file":"/app.js","sourcesContent":["// database\r\nexport const patientInformationdb = new Mongo.Collection('Patient Information');","import { Meteor } from 'meteor/meteor';\r\nimport '../lib/database.js';\r\nimport { patientInformationdb } from \"../lib/database\"\r\nimport { get } from 'jquery';\r\n\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n  patientInformationdb.remove({});\r\n  for (let i = 0; i < 50; i++) {\r\n    var patientID = \"XXXXXXX\".replace(/X/g, function () {\r\n      return \"0123456789ABCDEF\".charAt((Math.random() * 16))\r\n    });\r\n\r\n    var DOB = randomDate(new Date(1970, 0, 1), new Date());\r\n\r\n    var age = ageCalculator(DOB);\r\n\r\n\r\n    var weight = \"1XX lbs\".replace(/X/g, function () {\r\n      return \"123456789\".charAt((Math.random() * 9))\r\n    });\r\n\r\n    var height = \"5ft Xin\".replace(/X/g, function () {\r\n      return \"1234567891011\".charAt((Math.random() * 9))\r\n    });\r\n\r\n    var bloodPressure = \"1XX/XX mmHg\".replace(/X/g, function () {\r\n      return \"123456789\".charAt((Math.random() * 9))\r\n    });\r\n\r\n    var heartRate = \"XX BPM\".replace(/X/g, function () {\r\n      return \"123456789\".charAt((Math.random() * 9))\r\n    });\r\n\r\n    var RBC = \"X.XX M/UL\".replace(/X/g, function () {\r\n      return \"123456789\".charAt((Math.random() * 9))\r\n    });\r\n\r\n    var bloodGlucose = \"XXX mg/dl\".replace(/X/g, function () {\r\n      return \"123\".charAt((Math.random() * 3))\r\n    });\r\n\r\n    var hemoglobin = \"1X.X g/dl\".replace(/X/g, function () {\r\n      return \"0123456789\".charAt((Math.random() * 10))\r\n    });\r\n\r\n    var hematocrit = \"1X.X %\".replace(/X/g, function () {\r\n      return \"123456789\".charAt((Math.random() * 9))\r\n    });\r\n\r\n    var MCV = \"XX fL\".replace(/X/g, function () {\r\n      return \"789\".charAt((Math.random() * 3))\r\n    });\r\n\r\n    var plateletCount = \"XXX K/dl\".replace(/X/g, function () {\r\n      return \"0123456789\".charAt((Math.random() * 10))\r\n    });\r\n\r\n    var WBC = \"XX.X K/uL\".replace(/X/g, function () {\r\n      return \"0123456789\".charAt((Math.random() * 10))\r\n    });\r\n\r\n    var sodium = \"1XX mEq/L\".replace(/X/g, function () {\r\n      return \"0123456789\".charAt((Math.random() * 10))\r\n    });\r\n\r\n    var potassium = \"X.X mEq/L\".replace(/X/g, function () {\r\n      return \"0123456789\".charAt((Math.random() * 10))\r\n    });\r\n\r\n    var macAddress = \"XX:XX:XX:XX:XX:XX\".replace(/X/g, function () {\r\n      return \"0123456789ABCDEF\".charAt(Math.floor(Math.random() * 16))\r\n\r\n    });\r\n    var patientName = getRandomName(firstNames, lastNames);\r\n    var address = generateStreetAddress();\r\n    var physicianName = \"Dr. \" + getRandomName(firstNames, lastNames);\r\n    var prescriptions = getPrescriptions();\r\n\r\n\r\n\r\n\r\n    patientInformationdb.insert({\r\n\r\n      \"macAddress\": macAddress,\r\n      \"patientInformation\": {\r\n        \"patientName\": patientName,\r\n        \"address\": address,\r\n        \"patientID\": patientID,\r\n        \"DOB\": DOB,\r\n        \"age\": age,\r\n        \"physicianName\": physicianName\r\n      },\r\n      \"vitals\": {\r\n        \"bloodPressure\": bloodPressure,\r\n        \"heartRate\": heartRate,\r\n        \"height\": height,\r\n        \"weight\": weight\r\n      },\r\n      \"labWork\": {\r\n        \"RBC\": RBC,\r\n        \"Blood Glucose Level\": bloodGlucose,\r\n        \"Hemoglobin\": hemoglobin,\r\n        \"Hematocrit\": hematocrit,\r\n        \"MCV\": MCV,\r\n        \"WBC\": WBC,\r\n        \"Sodium\": sodium,\r\n        \"Potassium\": potassium,\r\n        \"Platelet Count\": plateletCount\r\n      },\r\n      \"prescriptions\": prescriptions,\r\n      \"dermatology\": {\r\n        \"acne\": getBoolean(),\r\n        \"acne scars\": getBoolean(),\r\n        \"eczema and dermatitis\": getBoolean(),\r\n        \"hair loss\": getBoolean(),\r\n        \"nail problems\": getBoolean(),\r\n        \"warts\": getBoolean(),\r\n        \"fungal infections\": getBoolean(),\r\n        \"skin cancer\": getBoolean(),\r\n        \"shingles\": getBoolean(),\r\n        \"rosacea\": getBoolean(),\r\n        \"psoriasis\": getBoolean(),\r\n        \"vitiligo\": getBoolean()\r\n       }\r\n\r\n    });\r\n  }\r\n});\r\n\r\n\r\nMeteor.methods({\r\n  clearRecords: () => {\r\n    patientInformationdb.remove({});\r\n  }\r\n})\r\n\r\n//array for first and last names\r\nconst firstNames = [\"Michael\", \"Christopher\", \"Jessica\", \"Matthew\", \"Ashley\", \"Jennifer\", \"Joshua\", \"Amanda\", \"Daniel\", \"David\", \"James\", \"Robert\", \"John\",\r\n  \"Joseph\", \"Andrew\", \"Ryan\", \"Brandon\", \"Jason\", \"Justin\", \"Sarah\", \"William\", \"Jonathan\", \"Stephanie\", \"Brian\", \"Nicole\", \"Nicholas\", \"Anthony\", \"Heather\",\r\n  \"Eric\", \"Elizabeth\", \"Adam\", \"Megan\", \"Melissa\", \"Kevin\", \"Steven\", \"Thomas\", \"Timothy\", \"Christina\", \"Kyle\", \"Rachel\", \"Laura\", \"Lauren\", \"Amber\", \"Brittany\",\r\n  \"Danielle\", \"Richard\", \"Kimberly\", \"Jeffrey\", \"Amy\", \"Crystal\", \"Michelle\", \"Tiffany\", \"Jeremy\", \"Benjamin\", \"Mark\", \"Emily\", \"Aaron\"];\r\n\r\nconst lastNames = [\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Garcia\", \"Miller\", \"Davis\", \"Rodriguez\", \"Martinez\", \"Hernandez\", \"Lopez\", \"Gonzalez\",\r\n  \"Wilson\", \"Anderson\", \"Thomas\", \"Taylor\", \"Moore\", \"Jackson\", \"Martin\", \"Lee\", \"Perez\", \"Thompson\", \"White\", \"Harris\", \"Sanchez\", \"Clark\", \"Ramirez\", \"Lewis\",\r\n  \"Robinson\", \"Walker\", \"Young\", \"Allen\", \"King\", \"Wright\", \"Scott\", \"Torres\", \"Nguyen\", \"Hill\", \"Flores\", \"Green\", \"Adams\", \"Nelson\", \"Baker\", \"Hall\", \"Rivera\",\r\n  \"Campbell\", \"Mitchell\", \"Carter\", \"Roberts\"];\r\n\r\n\r\n//random number\r\nconst getRandomNumber = (max) => Math.floor(Math.random() * max);\r\n\r\n\r\n//getting random names\r\nfunction getRandomName(arr1, arr2) {\r\n\r\n  let firstName = arr1[getRandomNumber(arr1.length)];\r\n  let lastName = arr2[getRandomNumber(arr2.length)];\r\n\r\n  let name = firstName + \" \" + lastName;\r\n\r\n  return name;\r\n}\r\n\r\n//generate random DoB\r\nfunction randomDate(start, end) {\r\n  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toDateString();\r\n}\r\n\r\n//generate age\r\nfunction ageCalculator(DOB) {\r\n  var dob = new Date(DOB);\r\n\r\n  //calculate month difference from current date in time\r\n  var month_diff = Date.now() - dob.getTime();\r\n\r\n  //convert the calculated difference in date format\r\n  var age_dt = new Date(month_diff);\r\n\r\n  //extract year from date    \r\n  var year = age_dt.getUTCFullYear();\r\n\r\n  //now calculate the age of the user\r\n  var age = Math.abs(year - 1970);\r\n\r\n  //display the calculated age\r\n  return age;\r\n}\r\n\r\n//generate random street address\r\nfunction generateStreetAddress() {\r\n  //generate random num for address between 1000 and 9000\r\n  var num = Math.floor(1000 + Math.random() * 9000);\r\n\r\n  //list of street names to pick from\r\n  var streetNames = [\"Hartford Road\", \"Devonshire Drive\", \"Buckingham Drive\", \"Cemetery Road\", \"Fulton Street\", \"Deerfield Drive\", \"Route 7\", \"Park Drive\",\r\n    \"Williams Street\", \"Hickory Street\", \"10th Street\", \"Brook Lane\", \"Bayberry Drive\", \"Canterbury Road\", \"Maple Lane\", \"Charles Street\", \"Court Street\",\r\n    \"Country Lane\", \"Laurel Street\", \"Eagle Road\", \"Hilltop Road\", \"Broadway\", \"Bay Street\", \"Cedar Court\", \"Canal Street\", \"Race Street\", \"Fairway Drive\",\r\n    \"Shady Lane\", \"Hamilton Street\", \"Mill Street\", \"Cooper Street\", \"Lakeview Drive\", \"Cedar Avenue\", \"Cleveland Avenue\", \"3rd Street North\", \"Orchard Street\",\r\n    \"Howard Street\", \"Lilac Lane\", \"Creek Road\", \"Eagle Street\", \"Hillside Drive\", \"Liberty Street\", \"Lafayette Avenue\", \"Lake Street\", \"Front Street South\",\r\n    \"7th Street\", \"Garfield Avenue\", \"Sycamore Drive\", \"New Street\", \"Clinton Street\"]\r\n\r\n  //list of fort wayne zip codes\r\n  var zipCodes = [\"46774\", \"46802\", \"46803\", \"46804\", \"46805\", \"46806\", \"46807\",\r\n    \"46808\", \"46809\", \"46814\", \"46815\", \"46816\", \"46818\", \"46819\", \"46825\", \"46835\", \"46845\"];\r\n  //gets random street name\r\n  var streetName = streetNames[getRandomNumber(streetNames.length)];\r\n\r\n  var zip = zipCodes[getRandomNumber(zipCodes.length)];\r\n\r\n  //assigns address in num street name city state, and random zipcode\r\n  var address = num + \" \" + streetName + \" Fort Wayne, IN \" + \" \" + zip;\r\n\r\n  //return address\r\n  return address;\r\n}\r\n\r\n//prescriptions\r\nfunction getPrescriptions() {\r\n  var numOfPrepscriptions = Math.floor(Math.random() * 10);\r\n\r\n  var prescriptions = [\"Hydrocodone\", \"Metformin\", \"Losartan\", \"Antibiotics\", \"Albuterol\",\r\n    \"Antihistamines\", \"Gabapentin\", \"Omeprazole\", \"Levothyroxine\", \"Atorvastatin\"];\r\n\r\n  var actualPrescriptions = [];\r\n  //loop to determine what prescription they have if any\r\n  for (let i = 0; i < numOfPrepscriptions; i++) {\r\n    let drug = prescriptions[getRandomNumber(prescriptions.length)];\r\n    if (actualPrescriptions.includes(drug)) {\r\n      continue\r\n    } else {\r\n      actualPrescriptions.push(drug);\r\n    }\r\n  }\r\n\r\n  return actualPrescriptions;\r\n}\r\n\r\n//generate random true false\r\nfunction getBoolean() {\r\n  var random_boolean_value = Math.random() < .5;\r\n  return random_boolean_value;\r\n}"]}